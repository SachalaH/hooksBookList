{"version":3,"sources":["reducers/bookReducer.js","contexts/BookContext.js","contexts/ThemeContext.js","components/Navbar.js","components/BookDetails.js","components/BookList.js","components/ToggleTheme.js","components/BookForm.js","App.js","index.js"],"names":["bookReducer","state","action","type","title","book","author","id","uuid","filter","BookContext","createContext","BookContextProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","books","dispatch","useEffect","setItem","stringify","Provider","value","children","ThemeContext","ThemeContextProvider","useState","isLightTheme","light","syntax","ui","bg","dark","theme","setTheme","toggleTheme","Navbar","num_books","useContext","length","display","className","style","background","color","BookDetails","onClick","BookList","map","key","ToggleTheme","NewBookForm","setTitle","setAuthor","onSubmit","e","preventDefault","placeholder","required","onChange","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f6b5633.chunk.js","sourcesContent":["import uuid from \"uuid/dist/v1\";\r\n\r\nexport const bookReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_BOOK\":\r\n      return [\r\n        ...state,\r\n        {\r\n          title: action.book.title,\r\n          author: action.book.author,\r\n          id: uuid(),\r\n        },\r\n      ];\r\n\r\n    case \"REMOVE_BOOK\":\r\n      return state.filter((book) => book.id !== action.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport { bookReducer } from \"../reducers/bookReducer\";\r\n\r\nexport const BookContext = createContext();\r\n\r\nconst BookContextProvider = (props) => {\r\n  const [books, dispatch] = useReducer(bookReducer, [], () => {\r\n    const localData = localStorage.getItem(\"books\");\r\n\r\n    return localData ? JSON.parse(localData) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"books\", JSON.stringify(books));\r\n  }, [books]);\r\n  return (\r\n    <BookContext.Provider value={{ books, dispatch }}>\r\n      {props.children}\r\n    </BookContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BookContextProvider;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n  const [theme, setTheme] = useState({\r\n    isLightTheme: true,\r\n    light: { syntax: \"#363636\", ui: \"#ddd\", bg: \"#eee\" },\r\n    dark: { syntax: \"#f5f5f5\", ui: \"#333\", bg: \"#555\" },\r\n  });\r\n\r\n  const toggleTheme = () => {\r\n    setTheme({ ...theme, isLightTheme: !theme.isLightTheme });\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ ...theme, toggleTheme: toggleTheme }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { BookContext } from \"../contexts/BookContext\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\n\r\nconst Navbar = () => {\r\n  const { books } = useContext(BookContext);\r\n  const num_books = books.length;\r\n  var display = \"\";\r\n  if (num_books === 0) {\r\n    display = \"no book to read, add one!\";\r\n  } else if (num_books === 1) {\r\n    display = `${num_books} book to go through.`;\r\n  } else {\r\n    display = `${num_books} books to go through.`;\r\n  }\r\n  const { isLightTheme, light, dark } = useContext(ThemeContext);\r\n  const theme = isLightTheme ? light : dark;\r\n  return (\r\n    <div\r\n      className=\"navbar\"\r\n      style={{ background: theme.bg, color: theme.syntax }}\r\n    >\r\n      <h1>Your Book List</h1>\r\n      <p>You currently have {display}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from \"react\";\r\nimport { BookContext } from \"../contexts/BookContext\";\r\n\r\nconst BookDetails = ({ book, theme }) => {\r\n  const { dispatch } = useContext(BookContext);\r\n  return (\r\n    <li\r\n      style={{ background: theme.bg }}\r\n      onClick={() => dispatch({ type: \"REMOVE_BOOK\", id: book.id })}\r\n    >\r\n      <div style={{ color: theme.syntax }} className=\"title\">\r\n        {book.title}\r\n      </div>\r\n      <div style={{ color: theme.syntax }} className=\"author\">\r\n        {book.author}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default BookDetails;\r\n","import React, { useContext } from \"react\";\r\nimport BookDetails from \"./BookDetails\";\r\nimport { BookContext } from \"../contexts/BookContext\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\n\r\nconst BookList = () => {\r\n  const { books } = useContext(BookContext);\r\n  const { isLightTheme, light, dark } = useContext(ThemeContext);\r\n  const theme = isLightTheme ? light : dark;\r\n  return books.length ? (\r\n    <div className=\"book-list\" style={{ background: theme.ui }}>\r\n      <ul>\r\n        {books.map((book) => {\r\n          return <BookDetails book={book} key={book.id} theme={theme} />;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  ) : (\r\n    <div className=\"empty\" style={{ color: theme.syntax }}>\r\n      No books to read, take a break, enjoy free time.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\n\r\nconst ToggleTheme = () => {\r\n  const { isLightTheme, light, dark, toggleTheme } = useContext(ThemeContext);\r\n  const theme = isLightTheme ? light : dark;\r\n  return (\r\n    <button\r\n      className=\"toggle-theme\"\r\n      onClick={toggleTheme}\r\n      style={{ background: theme.bg, color: theme.syntax }}\r\n    >\r\n      Toggle Theme\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ToggleTheme;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { BookContext } from \"../contexts/BookContext\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\nimport ToggleTheme from \"./ToggleTheme\";\r\n\r\nconst NewBookForm = () => {\r\n  const { dispatch } = useContext(BookContext);\r\n  const { isLightTheme, light, dark } = useContext(ThemeContext);\r\n  const theme = isLightTheme ? light : dark;\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: \"ADD_BOOK\",\r\n      book: {\r\n        title,\r\n        author,\r\n      },\r\n    });\r\n    setTitle(\"\");\r\n    setAuthor(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} style={{ background: theme.ui }}>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          placeholder=\"Book title\"\r\n          required\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          style={{ background: theme.bg, color: theme.syntax }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={author}\r\n          placeholder=\"Book author\"\r\n          required\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n          style={{ background: theme.bg, color: theme.syntax }}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Add book\"\r\n          style={{ background: theme.bg, color: theme.syntax }}\r\n        />\r\n      </form>\r\n      <ToggleTheme />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewBookForm;\r\n","import React from \"react\";\nimport BookContextProvider from \"./contexts/BookContext\";\nimport Navbar from \"./components/Navbar\";\nimport BookList from \"./components/BookList\";\nimport NewBookForm from \"./components/BookForm\";\nimport ThemeContextProvider from \"./contexts/ThemeContext\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeContextProvider>\n        <BookContextProvider>\n          <Navbar />\n          <NewBookForm />\n          <BookList />\n        </BookContextProvider>\n      </ThemeContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}